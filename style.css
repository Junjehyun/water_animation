/* 이 코드는 구글 폰트 서비스에서 Poppins 폰트를 다운로드하여 사용하겠다는 것을 선언하는 코드입니다. 
Poppins 폰트는 가볍고 깔끔한 디자인으로 인기가 있는 폰트 중 하나입니다. 100부터 900까지의 다양한 두께를 
제공하며, 다양한 어원의 언어를 지원합니다. 이 코드를 사용하면 웹페이지에서 Poppins 폰트를 사용할 수 있습니다. */
@import url('https://fonts.googleapis.com/css?family=Poppins:100,200,300,400,500,600,700,800,900');

/* '*'은 css에서 모든 요소에 적용한다는 의미임. */
*
{
    /* margin은 요소의 바깥쪽 여백을 의미하며, margin 값이 0이면 요소와 요소 사이에 아무것도 없는 것처럼 배치 */
    margin: 0;
    /* 글꼴 */
    font-family: 'Poppins', sans-serif;
}

body {
    /* flex컨테이너를 일단 만들어줌 */
    display: flex;
    /* flex컨테이너에 justify-content: center;속성을 사용해 flex item들을 수평(가로) 방향으로 가운데로 정렬시킴, 
    즉 display:flex선언을 먼저 해서 flex컨테이너를 일단 만들어줘야됨.*/
    justify-content: center;
    /* flex컨테이너에 justify-content: center;속성을 사용해 flex item들을 수직(세로) 방향으로 가운데로 정렬시킴, 
    즉 display:flex선언을 먼저 해서 flex컨테이너를 일단 만들어줘야됨.*/
    align-items: center;
    /* 이거 넣으니 한가운데로 가네?
    잘은 모르겠지만 뷰포트(브라우저 화면)의 높이의 100%를 최소 높이로 갖는 요소를 생성하는 속성 */
    /* 예를 들어, 전체 화면에 브랜딩 이미지를 배경으로 사용하고, 그 위에 내용을 중앙 정렬해서 배치하고자 할 때 유용하게 사용될 수 있다. */
    min-height: 100vh;
    /* 배경컬러 */
    background: #000;
}

.content {
    /* 요소를 일반적인 문서 흐름에 따라 배치하되, 상대적인 위치를 설정하는 CSS 속성 */
    position: relative;
}

.content h2 {
    /* 부모요소 content를 기준으로 절대 위치에 배치 */
    /* h2의 water는 2개이지만, absolute를 적용하면 겹쳐서 보이게 될것이다.
    즉 두개의 태그가 겹쳐서 1개로 보이게된다. position: absolute 속성으로 인해서 부모요소를 기준으로
    절대 위치에 배치되기 때문 */
    position: absolute;
    /* 요소를 수평 -50%, 수직 -50% 이동 */
    transform: translate(-50%, -50%);
    font-size: 8em;
}

/*  content자식요소중 첫번째 h2 */
.content h2:nth-child(1) {
    /* 글자색을 투명하게 한다. 이렇게 하면 글자는 안보인다 */
    color: transparent;
    /* 글자 주변에 2px 두께의 파란색 윤곽선 테두리를 설정. */
    -webkit-text-stroke: 2px #03a9f4;
}
/* content자식요소중 두번째 h2 */
.content h2:nth-child(2) {
    /* 글자색 파란색으로 설정요 */
    color: #03a9f4;
    /* @Keyframes를 활용해 애니메이션 효과를 넣어본다.
    4s는 한번 재생되는데 걸리는 시간, ease-in-out은 처음과 끝부분이 느리고, 중간부분은 빠르게 움직이는 함수.
    infinite는 애니메이션이 무한반복 되도록 설정
    자세한건 @Keyframes에서 세팅 */
    animation: animate 4s ease-in-out infinite;
}

/* Keyframes는 css에서 애니메이션을 만들 때 사용하는 규칙 중 하나이다.
animate는 여기서 사용되는 애니메이션 이름이다. 0%와 100%는 애니메이션의 시작과 끝을 의미,
clip-path속성을 사용해 다각형 클리핑 경로를 정의하고 있다. 이 경로는 다각형 모양의 영역을 만들어내는데 사용된다. */
@keyframes animate {
    /* Clippath는 요소를 잘라내는 방법을 지정할수 있음. 요소의 모양을 변경하거나 자름.
    polygon함수는 clip-path속성에서 사용되며 다각형 모양의 마스크를 만들어줌.
    polygon은 괄호 안에 x,y 좌표값을 차례대로 나열하여 다각형 모양의 마스크를 만든다. 
    지금 단계에서는 너무 자세히 알 필요는 없고 차근차근하자*/
    0%,100%
    {
        clip-path: polygon(0% 45%, 15% 44%, 32% 50%, 54% 60%,
         70% 61%, 84% 59%, 100% 52%, 100% 100%, 0% 100%);
    }
    50%
    {
        clip-path: polygon(0% 60%, 16% 65%, 34% 66%, 51% 62%, 
        67% 50%, 84% 45%, 100% 46%, 100% 100%, 0% 100%);
    }
}